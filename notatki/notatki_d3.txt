testy dla aplikacji desktop
quick test pro - testy automatyczne dla aplikacji desktop, VBA
test complete - kod testu w kilku jêzykach (c++, c#, java), elastyczny
ranorex
wine
xamarine
wiêcej w podsumowaniu


testy
na blogu s¹ conajmniej 2 strony (aktywna paginacja)

xpath - szukanie po strukturze html
najszybsze wyszukiwanie po css (u¿ywane w przegl¹darce do ró¿nych rzeczy), wolniej po strukturze DOM
uruchamianie testów z command line - xunit console runner

teamcity - dl, install, port 8080, system account, start service, dalej w przegl¹darce
konto admin/tema07

testy z cmdline: xunit.console.exe <assembly.dll>
mo¿na kaskadowo paczki testów jeœli zale¿¹ jedne od drugich, najlepiej d¹¿yæ do niezale¿noœci

test first:
- fast - szybkie testy
- independent/isolated - testy nie zale¿¹ od siebie i od konfiguracji œrodowiska
- repeateable - powtarzalne zawsze przechodz¹ tak samo
- selfvalidated - wyst¹pienie b³êdu wskazuje jednoznacznie na b³¹d w aplikacji a nie w testach
- timely - w dobrym momencie, test na odpowiednim poziomie
test first nie implikuje testów automatycznych ani TDD


tc - automatycznie odpala testy, darmowe do 20 konfiguracji bilduj¹cych
wrzucamy do tc skrypt + link do repozytorium
mo¿na odpalaæ testy po ka¿dym commicie lub po okreœlonym
konfiguracja z klocków ustawianych w ³añcuch

1) wszystkie testy
nowy projekt -> manual
build configuration -> manual, url do repozytorium
https://github.com/rafal-codesprinters/autotestdotnet.git, metoda anonymous, test connection, wpisaæ swojego brancha
triggers
- przyjmujemy po ka¿dym commit
- quiet period - po jakim czasie od push (ma sens przy do comitowaniu)
build step
- command line
- executable with parameters
dodatkowe kroki przed testem: nuget-install, visualstudio sln (lub msbuild)
plik cmd do g³ównego katalogu

w repozytorium bez dll i pakietów -> ustawiæ dobrze w .gitignore
dobre praktyki: Nuget Installer, MSBuild (dla maszyny bez VS)

obiad

ustawienia: mo¿na konfigurowaæ powiadomienia
wizualizacja zmian
build log

refaktoryzacja kodu testów
- logowanie mo¿na wydzieliæ
- odpornoœæ na nazwy/id elementów

logika testu
- logowanie
- dodaj post
- napisz post
- opublikuj
- wyloguj
- sprawdz

wydzielamy klocki
- login z w³aœciwoœciami user, password, metoda Login()
- mo¿liwoœæ ³atwej zmiany nazw dla div jeœli np. graficy pozmieniaj¹

zaleta - ³atwoœæ w utrzymaniu (poprawki w jednym miejscu) i lepsza czytelnoœæ

piszemy szkielet bez rzeczywistych obiektów
LoginPage.Open();
LoginPage.User = "";
LoginPage.Password = "";
LoginPage.Login();
AdminPage.Open();
AdminPage.OpenPosts();
AdminPage.OpenAddNewPost();
AdminPage.InsertPost("caption", "content");
WordPress.Logout();
